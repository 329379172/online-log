{"version":3,"sources":["../src/main.js"],"names":["Koa","require","app","morgan","path","router","routerMiddleWare","convert","serve","koaBody","use","__dirname","login","routes","notFound","on","err","ctx","console","error","status","body","message","global","xiaoqiuStore","xiaoqiuLogs","Proxy","set","target","property","value","receiver","log","sendLog","server","createServer","callback","io","connections","users","socket","next","username","sockets","push","length","close","splice","indexOf","data","forEach","userSocket","emit","module","exports"],"mappings":"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","file":"main.js","sourcesContent":["/** * Created by linfeiyang on 16-10-31.  */ \nconst Koa = require('koa');\nconst app = new Koa();\nconst morgan = require('koa-morgan');\n\nvar path = require('path');\nimport session from 'koa-session2';\nconst router = require('./router');\nconst routerMiddleWare = require('./middware/router');\nconst convert = require('koa-convert');\nconst serve = require('koa-static');\nconst koaBody   = require('koa-body');\n\napp.use(session());\n\n//app.use(morgan('combined'));\n\napp.use(convert(serve(__dirname + '/../public/dist')));\n\napp.use(koaBody());\n\napp.use(routerMiddleWare.login);\n\napp.use(router.routes());\n\napp.use(routerMiddleWare.notFound);\n\napp.on('error', (err, ctx) => {\n    console.error(`server error `);\n    ctx.status = 500;\n    ctx.body = { message: err.message};\n});\n\nglobal.xiaoqiuStore = [];\n\nglobal.xiaoqiuLogs = new Proxy(global.xiaoqiuStore, {\n    set: (target, property, value, receiver) => {\n        if(typeof value == 'object') {\n            console.log(`target=${target},property=${property},value=${value},receiver=${receiver}`);\n            sendLog(value);\n        }\n        return true;\n    }\n});\n\nvar server = require('http').createServer(app.callback());\nvar io = require('socket.io')(server);\nlet connections = [];\nlet users = {};\n\nio.use(async (socket, next) => {\n    //console.log(socket.request.headers.cookie);\n    socket.username = 'linfeiyang';\n    await next();\n});\n\nio.sockets.on('connection', (socket) => {\n    connections.push(socket);\n    console.log(`Connected: ${connections.length} sockets connected`);\n    socket.on('disconnect', (close) => {\n        console.log(close);\n        console.log(`disconnection`);\n        connections.splice(connections.indexOf(socket), 1);\n        console.log(`Connected: ${connections.length} sockets connected`);\n        if(socket.username) {\n            users[socket.username] = users[socket.username] || [];\n            users[socket.username].splice(users[socket.username].indexOf(socket), 1);\n        }\n    });\n    socket.on('set username', (data) => { //设置套接字的用户名\n        console.log(`set username=${data}`);\n        socket.username = data;\n        users[socket.username] = users[socket.username] || [];\n        users[socket.username].push(socket);\n    \t//let username = ctx.session.username;\n    \t//console.log(`message: ${data}, username:${username}`);\n        //io.sockets.emit('new log', {msg: data});\n    });\n});\n\n\nvar sendLog = (value) => {\n    let username = value.username;\n    if(!users[username] || users[username].length <= 0) {\n        return;\n    }\n    users[username].forEach((userSocket) => {\n        console.log(`send log to ${username}`);\n        userSocket.emit('new log', value);\n    });\n    //global.xiaoqiuStore.splice(global.xiaoqiuStore.indexOf(log), 1);\n};\n\nmodule.exports = server;\n"]}