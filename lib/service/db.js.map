{"version":3,"sources":["../../src/service/db.js"],"names":["pool","require","async","transactionAsync","fnlist","resolve","reject","transaction","err","findAsync","data","getConnAsync","conn","tableName","Error","where","options","sql","key","push","query","result","release","length","smartyAddAsync","smartyAdd","smartySaveAsync","smartySave","callback","getConnection","beginTransaction","eachSeries","item","fn","rollback","e","commit","select","find","arguments","execute","executeAsync","res","affectedRows","model","isCheck","series","field","hasOwnProperty","pass","i","fields","values","marks","join","smartyBatchSave","models","tbname","sets","module","exports"],"mappings":"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","file":"db.js","sourcesContent":["/**\n * Created by linfeiyang on 16-11-1.\n */\n/**\n * Created with WebStorm.\n * User: xiaoqiu\n * Email: lupengfei@gozap.com\n * Date: 15/3/24\n * Time: 下午1:41\n * Description:\n */\nvar pool = require('../lib/mysql-pool');\nvar async = require('async');\n\n\nvar transactionAsync = (fnlist) => {\n    return new Promise((resolve, reject) => {\n        transaction(fnlist, (err) => {\n            if (err) return reject(err);\n            resolve();\n        })\n    });\n\n};\n\n\nvar findAsync = async(data) => {\n    let conn = await pool.getConnAsync();\n    let tableName = data.tableName || '';\n    if(tableName == '') {\n        throw new Error('要操作的表名不能为空');\n    }\n    let where = data.where || {};\n    let options = [];\n    let sql = `select * from ${tableName} where 1=1`;\n    for(var key of Object.keys(where)) {\n        sql+= ` and ${key}=?`;\n        options.push(where[key]);\n    }\n    sql+= ` limit 0,1`;\n    return new Promise((resolve, reject) => {\n        conn.query(sql , options, (err, result) => {\n            conn.release();\n            if(err) return reject(err);\n            result = result || [];\n            if(result.length > 0) return resolve(result[0]);\n            resolve(null);\n        });\n    });\n};\n\nvar smartyAddAsync = (data) => {\n    return new Promise((resolve, reject) => {\n        smartyAdd(data, (err, result) => {\n            if (err) return reject(err);\n            resolve(result);\n        });\n    });\n};\n\n\nvar smartySaveAsync = () => {\n    return new Promise((resolve, reject) => {\n        smartySave(...arguments, (err) => {\n            if (err) return reject(err);\n            resolve(resolve);\n        });\n    });\n};\n\n/**\n *\n * 事务操作\n * @param fnlist fnlist\n * @param callback\n * 事务具体操作，此方法中的所有sql\n * @param callback\n */\nvar transaction = function (fnlist, callback) {\n    pool.getConnection(function (err, conn) {\n        if (err) return callback(err);\n        conn.beginTransaction(function (err) {\n            if (err) {\n                conn.release();\n                return callback(err);\n            } else {\n                //开始执行事务操作\n                async.eachSeries(fnlist, function (item, fn) {\n                    item(conn, fn);\n                }, function (err) {\n                    if (err) {\n                        conn.rollback(function () {\n                            try {\n                                conn.release();\n                            } catch (e) {\n                            }\n                            callback(err);\n                        });\n                    } else {\n                        conn.commit(function (err) {\n                            if (err) {\n                                conn.rollback(function () {\n                                    try {\n                                        conn.release();\n                                    } catch (e) {\n                                    }\n                                    callback(err);\n                                });\n                            } else {\n                                try {\n                                    conn.release();\n                                } catch (e) {\n                                }\n                                callback(err);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n};\n/**\n *\n * 根据sql查询多条数据\n */\nvar select = function (data, callback) {\n    var sql, options;\n    sql = data.sql;\n    options = data.options;\n    pool.getConnection(function (err, conn) {\n        if (err) return callback(err);\n        conn.query(sql, options, function (err, result) {\n            conn.release();\n            callback(err, result);\n        });\n    });\n};\n//查询一条数据\nvar find = function () {\n    var sql, options, callback;\n    if (arguments.length == 3) {\n        sql = arguments[0] + ' limit 0,1';\n        options = arguments[1];\n        callback = arguments[2];\n        pool.getConnection(function (err, conn) {\n            if (err) return callback(err);\n            conn.query(sql, options, function (err, result) {\n                conn.release();\n                if (err) return callback(err);\n                if (result && result.length > 0) {\n                    return callback(err, result[0]);\n                } else {\n                    return callback(err, {});\n                }\n            });\n        });\n    } else if (arguments.length == 4) {\n        var conn = arguments[0];\n        sql = arguments[1] + ' limit 0,1';\n        options = arguments[2];\n        callback = arguments[3];\n        conn.query(sql, options, function (err, result) {\n            if (err) return callback(err);\n            if (result && result.length > 0) {\n                return callback(err, result[0]);\n            } else {\n                return callback(err, {});\n            }\n        });\n    } else {\n        throw new Error('arguments count is not match!');\n    }\n};\n/**\n * 执行语句，返回执行结果\n * @param sql\n * @param options\n * @param callback\n * @return\n * { fieldCount: 0,\n  affectedRows: 0,\n  insertId: 0,\n  serverStatus: 2,\n  warningCount: 0,\n  message: '',\n  protocol41: true,\n  changedRows: 0 }\n */\nvar execute = function () {\n    var sql, options, callback;\n    if (arguments.length == 3) {\n        sql = arguments[0];\n        options = arguments[1];\n        callback = arguments[2];\n        pool.getConnection(function (err, conn) {\n            if (err) return callback(err);\n            conn.query(sql, options, function (err, result) {\n                conn.release();\n                callback(err, result);\n            });\n        });\n    } else if (arguments.length == 4) {\n        var conn = arguments[0];\n        sql = arguments[1];\n        options = arguments[2];\n        callback = arguments[3];\n        conn.query(sql, options, function (err, result) {\n            callback(err, result);\n        });\n    } else {\n        throw new Error('arguments count is not match!');\n    }\n};\n\n\n\nvar executeAsync = (sql, options) => {\n    return new Promise(async (resolve, reject) => {\n        pool.getConnection((err, conn) => {\n            if(err) return reject(err);\n            conn.query(sql, options, (err, res) => {\n                if(err) return reject(err);\n                resolve(res.affectedRows);\n            });\n        });\n    });\n};\n\n\n/**\n * 直接根据数据模型将数据插入数据库\n * @param data data\n * @param callback 回调方法\n */\nvar smartyAdd = (data, callback) => {\n    var tableName, model, isCheck;\n    tableName = data.tableName;\n    model = data.model || {};\n    isCheck = data.isCheck || false;\n    if (!tableName) return callback(new Error('table must not empty!'));\n    async.series([\n        function (fn) {\n            if (isCheck) {\n                //剔除不合法的字段\n                select('show columns from ' + tableName, null, function (err, result) {\n                    if (err) return fn(err);\n                    for (var field in model) {\n                        if (model.hasOwnProperty(field)) {\n                            var pass = false;\n                            for (var i = 0; i < result.length; i++) {\n                                if (field == result[i]['Field']) {\n                                    pass = true;\n                                }\n                            }\n                            if (!pass) {\n                                delete model[field];\n                            }\n                        }\n                    }\n                    fn(null);\n                });\n            } else {\n                fn(null);\n            }\n        }\n    ], function (err) {\n        if (err) return callback(err);\n        var fields = [];\n        var values = [];\n        var marks = [];\n        for (var field in model) {\n            if (model.hasOwnProperty(field)) {\n                fields.push('`' + field + '`');\n                values.push(model[field]);\n                marks.push('?');\n            }\n        }\n        if (fields.length == 0 || values.length == 0) {\n            callback(new Error('data must not empty!'));\n        } else {\n            var sql = 'insert into ' + tableName + ' (' + fields.join(',') + ') values(' + marks.join(',') + ')';\n            execute(sql, values, callback);\n        }\n    });\n};\nvar smartyBatchSave = function (models, callback) {\n    //todo\n};\n/**\n * 直接根据数据模型保存数据\n * @param conn 可空\n * @param tbname 表名\n * @param model 数据模型\n * @param where 条件\n * @param isCheck 是否检查字段名合法\n * @param callback 回调方法\n */\nvar smartySave = function () {\n    var conn, tbname, model, where, isCheck, callback;\n    if (arguments.length == 5) {\n        tbname = arguments[0];\n        model = arguments[1] || {};\n        where = arguments[2];\n        isCheck = arguments[3];\n        callback = arguments[4];\n        model = model || {};\n        where = where || '';\n        where && (where = ' where ' + where);\n        if (!tbname) return callback(new Error('table must not empty!'));\n        async.series([\n            function (fn) {\n                if (isCheck) {\n                    //剔除不合法的字段\n                    select('show columns from ' + tbname, null, function (err, result) {\n                        if (err) return fn(err);\n                        for (var field in model) {\n                            if (model.hasOwnProperty(field)) {\n                                var pass = false;\n                                for (var i = 0; i < result.length; i++) {\n                                    if (field == result[i]['Field']) {\n                                        pass = true;\n                                    }\n                                }\n                                if (!pass) {\n                                    delete model[field];\n                                }\n                            }\n                        }\n                        fn(null);\n                    });\n                } else {\n                    fn(null);\n                }\n            }\n        ], function (err) {\n            if (err) return callback(err);\n            var sets = [];\n            var values = [];\n            for (var field in model) {\n                if (model.hasOwnProperty(field)) {\n                    sets.push('`' + field + '`=?');\n                    values.push(model[field]);\n                }\n            }\n            if (sets.length == 0 || values.length == 0) {\n                callback(new Error('data must not empty!'));\n            } else {\n                var sql = 'update ' + tbname + ' set ' + sets.join(',') + where;\n                execute(sql, values, callback);\n            }\n        });\n    } else if (arguments.length == 6) {\n        conn = arguments[0];\n        tbname = arguments[1];\n        model = arguments[2] || {};\n        where = arguments[3];\n        isCheck = arguments[4];\n        callback = arguments[5];\n        model = model || {};\n        where = where || '';\n        where && (where = ' where ' + where);\n        if (!tbname) return callback(new Error('table must not empty!'));\n        async.series([\n            function (fn) {\n                if (isCheck) {\n                    //剔除不合法的字段\n                    select(conn, 'show columns from ' + tbname, null, function (err, result) {\n                        if (err) return fn(err);\n                        for (var field in model) {\n                            if (model.hasOwnProperty(field)) {\n                                var pass = false;\n                                for (var i = 0; i < result.length; i++) {\n                                    if (field == result[i]['Field']) {\n                                        pass = true;\n                                    }\n                                }\n                                if (!pass) {\n                                    delete model[field];\n                                }\n                            }\n                        }\n                        fn(null);\n                    });\n                } else {\n                    fn(null);\n                }\n            }\n        ], function (err) {\n            if (err) return callback(err);\n            var sets = [];\n            var values = [];\n            for (var field in model) {\n                if (model.hasOwnProperty(field)) {\n                    sets.push('`' + field + '`=?');\n                    values.push(model[field]);\n                }\n            }\n            if (sets.length == 0 || values.length == 0) {\n                callback(new Error('data must not empty!'));\n            } else {\n                var sql = 'update ' + tbname + ' set ' + sets.join(',') + where;\n                execute(conn, sql, values, callback);\n            }\n        });\n    } else {\n        throw new Error('arguments count is not match!');\n    }\n};\nmodule.exports = {\n    transaction: transaction,\n    select: select,\n    find: find,\n    execute: execute,\n    smartyAdd: smartyAdd,\n    smartySave: smartySave,\n\n\n    transactionAsync: transactionAsync,\n    findAsync: findAsync,\n    smartyAddAsync: smartyAddAsync,\n    smartySaveAsync: smartySaveAsync,\n    executeAsync: executeAsync\n\n};"]}